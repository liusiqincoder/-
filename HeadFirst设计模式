重构
    列出需要改变代码的原因
    把问题归零，找出应用中需要变化的代码，把他们独立出来，不要和不需要改变的代码混在一起（设计原则）
    针对接口编程，而不是为了实现编程
    多用组合，少用继承（有一个>是一个）
策略模式
    定义了算法族，分别分装起来，让他们可以相互替换，此模式让算法的实现独立于使用算法的用户
    
观察者模式
    定义了对象的一对多的依赖，当一个对象状态改变时，他的所有观察者都会收到通知并更新
    为了交互对象松耦合设计而努力
    java内置的观察者模式  继承Observable（是一个类，而非接口，实现有许多问题）
装饰者模式 
    类应该对扩展开放，对修改关闭
    目标是允许类容易扩展，在不修改原有的代码情况下，就可搭配新的行为。
